#
# Copyright (C) 2024 nota inc. All rights reserved.
# This source code is the property of nota inc. and is protected by copyright law. THE RECEIPT OR POSSESSION OF  THIS SOURCE CODE AND/OR RELATED INFORMATION DOES NOT CONVEY OR IMPLY TRANSFER OF OWNERSHIP, COPYRIGHT OR ANY RIGHTS INCLUDING BUT NOT LIMITED TO REPRODUCE, DISCLOSE OR DISTRIBUTE ITS CONTENTS, OR TO MANUFACTURE, USE, OR SELL ANYTHING THAT IT  MAY DESCRIBE, IN WHOLE OR IN PART.
# Unauthorized disclosure, reproduction, modification, distribution, or commercial use of all or any part of this source code without prior written consent from Nota Inc. is strictly prohibited.
# This source code is provided "as is" and without any warranty, express or implied.
# Nota Inc. shall not be liable for any damages arising from the use of this source code.
# For inquiries regarding the use of this source code, please contact Nota Inc. at:
# Email: contact@nota.ai
#
name: 'CD'

on:
  push:
    branches:
      - develop

jobs:
  CD:
    name: 'CD'

    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    permissions:
      contents: write
    strategy:
      # max-parallel: 1
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          # - platform: 'macos-latest' # for Intel based macs.
          #   args: '--target x86_64-apple-darwin'
          # - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
          #   args: ''
          - platform: 'windows-latest'
            args: '--target x86_64-pc-windows-msvc'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Setup Git Credentials
      #   run: git config --global url."https://${{ secrets.CARGO_GITHUB_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      # - name: install dependencies (ubuntu only)
      #   if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      #   # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
      #   # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      # - name: install dependencies (macos only)
      #   if: matrix.platform == 'macos-latest' # This must match the platform value defined above.
      #   run: |
      #     brew install protobuf

      # - name: install dependencies (windows only)
      #   if: matrix.platform == 'windows-latest' # This must match the platform value defined above.
      #   run: |
      #     choco install -y protoc
      #     echo "::add-path::C:\\Program Files\\Protobuf\\bin"
      #     protoc --version

      - name: pull gstreamer runtime (windows)
        if: matrix.platform == 'windows-latest'
        run: curl -L https://gstreamer.freedesktop.org/data/pkg/windows/1.20.7/msvc/gstreamer-1.0-msvc-x86_64-1.20.7.msi -o C:\\gstreamer-runtime.msi

      - name: install gstreamer runtime (windows)
        if: matrix.platform == 'windows-latest'
        run: msiexec /i C:\\gstreamer-runtime.msi /quiet /norestart /L*V C:\\gstreamer-install.log

      - name: check log (window)
        if: matrix.platform == 'windows-latest'
        run: |
          cat C:\\gstreamer-install.log
          ls

      - name: pritenv
        run: printenv

      - name: check
        run: echo $GSTREAMER_1_0_ROOT_MSVC_X86_64

      # - name: setup node
      #   uses: actions/setup-node@master
      #   with:
      #     node-version: 18.x

      # - name: install Rust stable
      #   uses: dtolnay/rust-toolchain@stable
      #   with:
      #     targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # - name: Rust cache
      #   uses: swatinem/rust-cache@v2
      #   with:
      #     workspaces: './src-tauri -> target'

      # - name: Install frontend dependencies
      #   run: yarn install --network-timeout 100000

      # - name: Cache Yarn dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.cache/yarn
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      # - name: build
      #   run: yarn tauri build

      # - uses: tauri-apps/tauri-action@v0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     projectPath: src-tauri/
      #     tagName: v__VERSION__
      #     releaseName: 'v__VERSION__'
      #     releaseBody: 'See the assets to download this version and install.'
      #     releaseDraft: true
      #     prerelease: false
      #     args: ${{ matrix.args }}
